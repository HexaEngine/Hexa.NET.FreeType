// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;

namespace Hexa.NET.FreeType
{
	/// <summary>
	/// ************************************************************************<br/>
	/// <br/>
	/// FT_StrokerBorder<br/>
	/// <br/>
	/// :<br/>
	/// These values are used to select a given stroke border in<br/>
	/// <br/>
	/// _Stroker_GetBorderCounts and <br/>
	/// _Stroker_ExportBorder.<br/>
	/// <br/>
	/// :<br/>
	/// FT_STROKER_BORDER_LEFT ::<br/>
	/// Select the left border, relative to the drawing direction.<br/>
	/// FT_STROKER_BORDER_RIGHT ::<br/>
	/// Select the right border, relative to the drawing direction.<br/>
	/// <br/>
	/// You can however use <br/>
	/// _Outline_GetInsideBorder and<br/>
	/// <br/>
	/// _Outline_GetOutsideBorder to get these.<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "FT_StrokerBorder_")]
	[Flags]
	public enum FTStrokerBorder : int
	{
		[NativeName(NativeNameType.EnumItem, "FT_STROKER_BORDER_LEFT")]
		[NativeName(NativeNameType.Value, "0")]
		Left = unchecked(0),
		[NativeName(NativeNameType.EnumItem, "FT_STROKER_BORDER_RIGHT")]
		[NativeName(NativeNameType.Value, "1")]
		Right = unchecked(1),
	}
}
