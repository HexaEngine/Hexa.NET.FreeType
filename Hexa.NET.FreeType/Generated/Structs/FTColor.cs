// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.FreeType
{
	/// <summary>
	/// ************************************************************************<br/>
	/// <br/>
	/// FT_Color<br/>
	/// <br/>
	/// :<br/>
	/// This structure models a BGRA color value of a 'CPAL' palette entry.<br/>
	/// The used color space is sRGB; the colors are not pre-multiplied, and<br/>
	/// alpha values must be explicitly set.<br/>
	/// <br/>
	/// :<br/>
	/// blue ::<br/>
	/// Blue value.<br/>
	/// green ::<br/>
	/// Green value.<br/>
	/// red ::<br/>
	/// Red value.<br/>
	/// alpha ::<br/>
	/// Alpha value, giving the red, green, and blue color's opacity.<br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "FT_Color_")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct FTColor
	{
		[NativeName(NativeNameType.Field, "blue")]
		[NativeName(NativeNameType.Type, "FT_Byte")]
		public byte Blue;
		[NativeName(NativeNameType.Field, "green")]
		[NativeName(NativeNameType.Type, "FT_Byte")]
		public byte Green;
		[NativeName(NativeNameType.Field, "red")]
		[NativeName(NativeNameType.Type, "FT_Byte")]
		public byte Red;
		[NativeName(NativeNameType.Field, "alpha")]
		[NativeName(NativeNameType.Type, "FT_Byte")]
		public byte Alpha;

		public unsafe FTColor(byte blue = default, byte green = default, byte red = default, byte alpha = default)
		{
			Blue = blue;
			Green = green;
			Red = red;
			Alpha = alpha;
		}


	}

}
