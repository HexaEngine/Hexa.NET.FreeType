// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.FreeType
{
	/// <summary>
	/// ************************************************************************<br/>
	/// <br/>
	/// FT_Data<br/>
	/// <br/>
	/// :<br/>
	/// Read-only binary data represented as a pointer and a length.<br/>
	/// <br/>
	/// :<br/>
	/// pointer ::<br/>
	/// The data.<br/>
	/// length ::<br/>
	/// The length of the data in bytes.<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "FT_Data_")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct FTData
	{
		[NativeName(NativeNameType.Field, "pointer")]
		[NativeName(NativeNameType.Type, "FT_Byte const *")]
		public unsafe byte* Pointer;
		[NativeName(NativeNameType.Field, "length")]
		[NativeName(NativeNameType.Type, "FT_UInt")]
		public uint Length;

		public unsafe FTData(byte* pointer = default, uint length = default)
		{
			Pointer = pointer;
			Length = length;
		}


	}

}
