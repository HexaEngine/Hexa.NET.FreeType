// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.FreeType
{
	/// <summary>
	/// ************************************************************************<br/>
	/// <br/>
	/// FT_LayerIterator<br/>
	/// <br/>
	/// :<br/>
	/// This iterator object is needed for <br/>
	/// _Get_Color_Glyph_Layer.<br/>
	/// <br/>
	/// :<br/>
	/// num_layers ::<br/>
	/// The number of glyph layers for the requested glyph index.  Will be<br/>
	/// set by <br/>
	/// _Get_Color_Glyph_Layer.<br/>
	/// layer ::<br/>
	/// The current layer.  Will be set by <br/>
	/// _Get_Color_Glyph_Layer.<br/>
	/// p ::<br/>
	/// An opaque pointer into 'COLR' table data.  The caller must set this<br/>
	/// to `NULL` before the first call of <br/>
	/// _Get_Color_Glyph_Layer.<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "FT_LayerIterator_")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct FTLayerIterator
	{
		[NativeName(NativeNameType.Field, "num_layers")]
		[NativeName(NativeNameType.Type, "FT_UInt")]
		public uint NumLayers;
		[NativeName(NativeNameType.Field, "layer")]
		[NativeName(NativeNameType.Type, "FT_UInt")]
		public uint Layer;
		[NativeName(NativeNameType.Field, "p")]
		[NativeName(NativeNameType.Type, "FT_Byte *")]
		public unsafe byte* P;

		public unsafe FTLayerIterator(uint numLayers = default, uint layer = default, byte* p = default)
		{
			NumLayers = numLayers;
			Layer = layer;
			P = p;
		}


	}

}
