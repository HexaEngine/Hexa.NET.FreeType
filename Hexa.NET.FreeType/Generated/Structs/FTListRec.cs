// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.FreeType
{
	/// <summary>
	/// ************************************************************************<br/>
	/// <br/>
	/// FT_ListRec<br/>
	/// <br/>
	/// :<br/>
	/// A structure used to hold a simple doubly-linked list.  These are used<br/>
	/// in many parts of FreeType.<br/>
	/// <br/>
	/// :<br/>
	/// head ::<br/>
	/// The head (first element) of doubly-linked list.<br/>
	/// tail ::<br/>
	/// The tail (last element) of doubly-linked list.<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "FT_ListRec_")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct FTListRec
	{
		[NativeName(NativeNameType.Field, "head")]
		[NativeName(NativeNameType.Type, "FT_ListNode")]
		public FTListNode Head;
		[NativeName(NativeNameType.Field, "tail")]
		[NativeName(NativeNameType.Type, "FT_ListNode")]
		public FTListNode Tail;

		public unsafe FTListRec(FTListNode head = default, FTListNode tail = default)
		{
			Head = head;
			Tail = tail;
		}


	}

}
