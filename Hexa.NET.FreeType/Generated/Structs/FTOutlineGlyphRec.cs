// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.FreeType
{
	/// <summary>
	/// ************************************************************************<br/>
	/// <br/>
	/// FT_OutlineGlyphRec<br/>
	/// <br/>
	/// :<br/>
	/// A structure used for outline (vectorial) glyph images.  This really is<br/>
	/// a 'sub-class' of <br/>
	/// _GlyphRec.<br/>
	/// <br/>
	/// :<br/>
	/// root ::<br/>
	/// The root <br/>
	/// _Glyph fields.<br/>
	/// outline ::<br/>
	/// A descriptor for the outline.<br/>
	/// <br/>
	/// As the outline is extracted from a glyph slot, its coordinates are<br/>
	/// expressed normally in 26.6 pixels, unless the flag <br/>
	/// _LOAD_NO_SCALE<br/>
	/// was used in <br/>
	/// _Load_Glyph or <br/>
	/// _Load_Char.<br/>
	/// The outline's tables are always owned by the object and are destroyed<br/>
	/// with it.<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "FT_OutlineGlyphRec_")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct FTOutlineGlyphRec
	{
		[NativeName(NativeNameType.Field, "root")]
		[NativeName(NativeNameType.Type, "FT_GlyphRec")]
		public FTGlyphRec Root;
		[NativeName(NativeNameType.Field, "outline")]
		[NativeName(NativeNameType.Type, "FT_Outline")]
		public FTOutline Outline;

		public unsafe FTOutlineGlyphRec(FTGlyphRec root = default, FTOutline outline = default)
		{
			Root = root;
			Outline = outline;
		}


	}

}
