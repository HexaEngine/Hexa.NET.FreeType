// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.FreeType
{
	/// <summary>
	/// ************************************************************************<br/>
	/// <br/>
	/// FT_PaintSweepGradient<br/>
	/// <br/>
	/// :<br/>
	/// A structure representing a `PaintSweepGradient` value of the 'COLR'<br/>
	/// v1 extensions, see<br/>
	/// 'https://github.com/googlefonts/colr-gradients-spec'.  The glyph<br/>
	/// layer filled with this paint is drawn filled with a sweep gradient<br/>
	/// from `start_angle` to `end_angle`.<br/>
	/// <br/>
	/// :<br/>
	/// colorline ::<br/>
	/// The <br/>
	/// _ColorLine information for this paint, i.e., the list of<br/>
	/// color stops along the gradient.<br/>
	/// center ::<br/>
	/// The center of the sweep gradient in font units represented as a<br/>
	/// vector of 16.16 fixed-point values.<br/>
	/// start_angle ::<br/>
	/// The start angle of the sweep gradient in 16.16 fixed-point<br/>
	/// format specifying degrees divided by 180.0 (as in the<br/>
	/// spec).  Multiply by 180.0f to receive degrees value.  Values are<br/>
	/// given counter-clockwise, starting from the (positive) y~axis.<br/>
	/// end_angle ::<br/>
	/// The end angle of the sweep gradient in 16.16 fixed-point<br/>
	/// format specifying degrees divided by 180.0 (as in the<br/>
	/// spec).  Multiply by 180.0f to receive degrees value.  Values are<br/>
	/// given counter-clockwise, starting from the (positive) y~axis.<br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "FT_PaintSweepGradient_")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct FTPaintSweepGradient
	{
		[NativeName(NativeNameType.Field, "colorline")]
		[NativeName(NativeNameType.Type, "FT_ColorLine")]
		public FTColorLine Colorline;
		[NativeName(NativeNameType.Field, "center")]
		[NativeName(NativeNameType.Type, "FT_Vector")]
		public FTVector Center;
		[NativeName(NativeNameType.Field, "start_angle")]
		[NativeName(NativeNameType.Type, "FT_Fixed")]
		public int StartAngle;
		[NativeName(NativeNameType.Field, "end_angle")]
		[NativeName(NativeNameType.Type, "FT_Fixed")]
		public int EndAngle;

		public unsafe FTPaintSweepGradient(FTColorLine colorline = default, FTVector center = default, int startAngle = default, int endAngle = default)
		{
			Colorline = colorline;
			Center = center;
			StartAngle = startAngle;
			EndAngle = endAngle;
		}


	}

}
