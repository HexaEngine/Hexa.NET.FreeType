// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.FreeType
{
	/// <summary>
	/// ************************************************************************<br/>
	/// <br/>
	/// FT_Parameter<br/>
	/// <br/>
	/// :<br/>
	/// A simple structure to pass more or less generic parameters to<br/>
	/// <br/>
	/// _Open_Face and <br/>
	/// _Face_Properties.<br/>
	/// <br/>
	/// :<br/>
	/// tag ::<br/>
	/// A four-byte identification tag.<br/>
	/// data ::<br/>
	/// A pointer to the parameter data.<br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "FT_Parameter_")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct FTParameter
	{
		[NativeName(NativeNameType.Field, "tag")]
		[NativeName(NativeNameType.Type, "FT_ULong")]
		public uint Tag;
		[NativeName(NativeNameType.Field, "data")]
		[NativeName(NativeNameType.Type, "FT_Pointer")]
		public FTPointer Data;

		public unsafe FTParameter(uint tag = default, FTPointer data = default)
		{
			Tag = tag;
			Data = data;
		}


	}

}
