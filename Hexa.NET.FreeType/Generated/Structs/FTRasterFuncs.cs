// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.FreeType
{
	/// <summary>
	/// ************************************************************************<br/>
	/// <br/>
	/// FT_Raster_Funcs<br/>
	/// <br/>
	/// :<br/>
	/// A structure used to describe a given raster class to the library.<br/>
	/// <br/>
	/// :<br/>
	/// glyph_format ::<br/>
	/// The supported glyph format for this raster.<br/>
	/// raster_new ::<br/>
	/// The raster constructor.<br/>
	/// raster_reset ::<br/>
	/// Used to reset the render pool within the raster.<br/>
	/// raster_render ::<br/>
	/// A function to render a glyph into a given bitmap.<br/>
	/// raster_done ::<br/>
	/// The raster destructor.<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "FT_Raster_Funcs_")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct FTRasterFuncs
	{
		[NativeName(NativeNameType.Field, "glyph_format")]
		[NativeName(NativeNameType.Type, "FT_Glyph_Format")]
		public FTGlyphFormat GlyphFormat;
		[NativeName(NativeNameType.Field, "raster_new")]
		[NativeName(NativeNameType.Type, "FT_Raster_NewFunc")]
		public unsafe void* RasterNew;
		[NativeName(NativeNameType.Field, "raster_reset")]
		[NativeName(NativeNameType.Type, "FT_Raster_ResetFunc")]
		public unsafe void* RasterReset;
		[NativeName(NativeNameType.Field, "raster_set_mode")]
		[NativeName(NativeNameType.Type, "FT_Raster_SetModeFunc")]
		public unsafe void* RasterSetMode;
		[NativeName(NativeNameType.Field, "raster_render")]
		[NativeName(NativeNameType.Type, "FT_Raster_RenderFunc")]
		public unsafe void* RasterRender;
		[NativeName(NativeNameType.Field, "raster_done")]
		[NativeName(NativeNameType.Type, "FT_Raster_DoneFunc")]
		public unsafe void* RasterDone;

		public unsafe FTRasterFuncs(FTGlyphFormat glyphFormat = default, FTRasterNewFunc rasterNew = default, FTRasterResetFunc rasterReset = default, FTRasterSetModeFunc rasterSetMode = default, FTRasterRenderFunc rasterRender = default, FTRasterDoneFunc rasterDone = default)
		{
			GlyphFormat = glyphFormat;
			RasterNew = (delegate*<void*, FTRaster*, int>)Marshal.GetFunctionPointerForDelegate(rasterNew);
			RasterReset = (delegate*<FTRaster, byte*, uint, void>)Marshal.GetFunctionPointerForDelegate(rasterReset);
			RasterSetMode = (delegate*<FTRaster, uint, void*, int>)Marshal.GetFunctionPointerForDelegate(rasterSetMode);
			RasterRender = (delegate*<FTRaster, FTRasterParams*, int>)Marshal.GetFunctionPointerForDelegate(rasterRender);
			RasterDone = (delegate*<FTRaster, void>)Marshal.GetFunctionPointerForDelegate(rasterDone);
		}


	}

}
