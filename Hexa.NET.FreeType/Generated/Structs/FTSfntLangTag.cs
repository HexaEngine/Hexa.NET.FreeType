// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.FreeType
{
	/// <summary>
	/// ************************************************************************<br/>
	/// <br/>
	/// FT_SfntLangTag<br/>
	/// <br/>
	/// :<br/>
	/// A structure to model a language tag entry from an SFNT 'name' table.<br/>
	/// <br/>
	/// :<br/>
	/// string ::<br/>
	/// The language tag string, encoded in UTF-16BE (without trailing<br/>
	/// `NULL` bytes).<br/>
	/// string_len ::<br/>
	/// The length of `string` in **bytes**.<br/>
	/// <br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "FT_SfntLangTag_")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct FTSfntLangTag
	{
		/// <summary>
		/// this string is *not* null-terminated! <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "string")]
		[NativeName(NativeNameType.Type, "FT_Byte *")]
		public unsafe byte* String;

		/// <summary>
		/// in bytes                              <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "string_len")]
		[NativeName(NativeNameType.Type, "FT_UInt")]
		public uint StringLen;


		public unsafe FTSfntLangTag(byte* str = default, uint stringLen = default)
		{
			String = str;
			StringLen = stringLen;
		}


	}

}
