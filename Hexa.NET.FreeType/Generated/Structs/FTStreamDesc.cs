// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.FreeType
{
	/// <summary>
	/// ************************************************************************<br/>
	/// <br/>
	/// FT_StreamDesc<br/>
	/// <br/>
	/// :<br/>
	/// A union type used to store either a long or a pointer.  This is used<br/>
	/// to store a file descriptor or a `FILE*` in an input stream.<br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "FT_StreamDesc_")]
	[StructLayout(LayoutKind.Explicit)]
	public partial struct FTStreamDesc
	{
		[NativeName(NativeNameType.Field, "value")]
		[NativeName(NativeNameType.Type, "long")]
		[FieldOffset(0)]
		public int Value;
		[NativeName(NativeNameType.Field, "pointer")]
		[NativeName(NativeNameType.Type, "void *")]
		[FieldOffset(0)]
		public unsafe void* Pointer;

		public unsafe FTStreamDesc(int value = default, void* pointer = default)
		{
			Value = value;
			Pointer = pointer;
		}


	}

}
