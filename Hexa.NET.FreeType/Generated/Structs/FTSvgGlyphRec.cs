// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.FreeType
{
	/// <summary>
	/// ************************************************************************<br/>
	/// <br/>
	/// FT_SvgGlyphRec<br/>
	/// <br/>
	/// :<br/>
	/// A structure used for OT-SVG glyphs.  This is a 'sub-class' of<br/>
	/// <br/>
	/// _GlyphRec.<br/>
	/// <br/>
	/// :<br/>
	/// root ::<br/>
	/// The root <br/>
	/// _GlyphRec fields.<br/>
	/// svg_document ::<br/>
	/// A pointer to the SVG document.<br/>
	/// svg_document_length ::<br/>
	/// The length of `svg_document`.<br/>
	/// glyph_index ::<br/>
	/// The index of the glyph to be rendered.<br/>
	/// metrics ::<br/>
	/// A metrics object storing the size information.<br/>
	/// units_per_EM ::<br/>
	/// The size of the EM square.<br/>
	/// start_glyph_id ::<br/>
	/// The first glyph ID in the glyph range covered by this document.<br/>
	/// end_glyph_id ::<br/>
	/// The last glyph ID in the glyph range covered by this document.<br/>
	/// transform ::<br/>
	/// A 2x2 transformation matrix to apply to the glyph while rendering<br/>
	/// it.<br/>
	/// delta ::<br/>
	/// Translation to apply to the glyph while rendering.<br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "FT_SvgGlyphRec_")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct FTSvgGlyphRec
	{
		[NativeName(NativeNameType.Field, "root")]
		[NativeName(NativeNameType.Type, "FT_GlyphRec")]
		public FTGlyphRec Root;
		[NativeName(NativeNameType.Field, "svg_document")]
		[NativeName(NativeNameType.Type, "FT_Byte *")]
		public unsafe byte* SvgDocument;
		[NativeName(NativeNameType.Field, "svg_document_length")]
		[NativeName(NativeNameType.Type, "FT_ULong")]
		public uint SvgDocumentLength;
		[NativeName(NativeNameType.Field, "glyph_index")]
		[NativeName(NativeNameType.Type, "FT_UInt")]
		public uint GlyphIndex;
		[NativeName(NativeNameType.Field, "metrics")]
		[NativeName(NativeNameType.Type, "FT_Size_Metrics")]
		public FTSizeMetrics Metrics;
		[NativeName(NativeNameType.Field, "units_per_EM")]
		[NativeName(NativeNameType.Type, "FT_UShort")]
		public ushort UnitsPerEM;
		[NativeName(NativeNameType.Field, "start_glyph_id")]
		[NativeName(NativeNameType.Type, "FT_UShort")]
		public ushort StartGlyphId;
		[NativeName(NativeNameType.Field, "end_glyph_id")]
		[NativeName(NativeNameType.Type, "FT_UShort")]
		public ushort EndGlyphId;
		[NativeName(NativeNameType.Field, "transform")]
		[NativeName(NativeNameType.Type, "FT_Matrix")]
		public FTMatrix Transform;
		[NativeName(NativeNameType.Field, "delta")]
		[NativeName(NativeNameType.Type, "FT_Vector")]
		public FTVector Delta;

		public unsafe FTSvgGlyphRec(FTGlyphRec root = default, byte* svgDocument = default, uint svgDocumentLength = default, uint glyphIndex = default, FTSizeMetrics metrics = default, ushort unitsPerEm = default, ushort startGlyphId = default, ushort endGlyphId = default, FTMatrix transform = default, FTVector delta = default)
		{
			Root = root;
			SvgDocument = svgDocument;
			SvgDocumentLength = svgDocumentLength;
			GlyphIndex = glyphIndex;
			Metrics = metrics;
			UnitsPerEM = unitsPerEm;
			StartGlyphId = startGlyphId;
			EndGlyphId = endGlyphId;
			Transform = transform;
			Delta = delta;
		}


	}

}
