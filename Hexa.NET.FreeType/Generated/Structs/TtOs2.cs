// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.FreeType
{
	/// <summary>
	/// ************************************************************************<br/>
	/// <br/>
	/// TT_OS2<br/>
	/// <br/>
	/// :<br/>
	/// A structure to model a TrueType 'OS/2' table.  All fields comply to<br/>
	/// the OpenType specification.<br/>
	/// Note that we now support old Mac fonts that do not include an 'OS/2'<br/>
	/// table.  In this case, the `version` field is always set to 0xFFFF.<br/>
	/// <br/>
	/// Possible values for bits in the `ulUnicodeRangeX` fields are given by<br/>
	/// the <br/>
	/// _UCR_XXX macros.<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "TT_OS2_")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct TtOs2
	{
		/// <summary>
		/// 0x0001 - more or 0xFFFF <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "version")]
		[NativeName(NativeNameType.Type, "FT_UShort")]
		public ushort Version;

		[NativeName(NativeNameType.Field, "xAvgCharWidth")]
		[NativeName(NativeNameType.Type, "FT_Short")]
		public short XAvgCharWidth;
		[NativeName(NativeNameType.Field, "usWeightClass")]
		[NativeName(NativeNameType.Type, "FT_UShort")]
		public ushort UsWeightClass;
		[NativeName(NativeNameType.Field, "usWidthClass")]
		[NativeName(NativeNameType.Type, "FT_UShort")]
		public ushort UsWidthClass;
		[NativeName(NativeNameType.Field, "fsType")]
		[NativeName(NativeNameType.Type, "FT_UShort")]
		public ushort FsType;
		[NativeName(NativeNameType.Field, "ySubscriptXSize")]
		[NativeName(NativeNameType.Type, "FT_Short")]
		public short YSubscriptXSize;
		[NativeName(NativeNameType.Field, "ySubscriptYSize")]
		[NativeName(NativeNameType.Type, "FT_Short")]
		public short YSubscriptYSize;
		[NativeName(NativeNameType.Field, "ySubscriptXOffset")]
		[NativeName(NativeNameType.Type, "FT_Short")]
		public short YSubscriptXOffset;
		[NativeName(NativeNameType.Field, "ySubscriptYOffset")]
		[NativeName(NativeNameType.Type, "FT_Short")]
		public short YSubscriptYOffset;
		[NativeName(NativeNameType.Field, "ySuperscriptXSize")]
		[NativeName(NativeNameType.Type, "FT_Short")]
		public short YSuperscriptXSize;
		[NativeName(NativeNameType.Field, "ySuperscriptYSize")]
		[NativeName(NativeNameType.Type, "FT_Short")]
		public short YSuperscriptYSize;
		[NativeName(NativeNameType.Field, "ySuperscriptXOffset")]
		[NativeName(NativeNameType.Type, "FT_Short")]
		public short YSuperscriptXOffset;
		[NativeName(NativeNameType.Field, "ySuperscriptYOffset")]
		[NativeName(NativeNameType.Type, "FT_Short")]
		public short YSuperscriptYOffset;
		[NativeName(NativeNameType.Field, "yStrikeoutSize")]
		[NativeName(NativeNameType.Type, "FT_Short")]
		public short YStrikeoutSize;
		[NativeName(NativeNameType.Field, "yStrikeoutPosition")]
		[NativeName(NativeNameType.Type, "FT_Short")]
		public short YStrikeoutPosition;
		[NativeName(NativeNameType.Field, "sFamilyClass")]
		[NativeName(NativeNameType.Type, "FT_Short")]
		public short SFamilyClass;
		[NativeName(NativeNameType.Field, "panose")]
		[NativeName(NativeNameType.Type, "FT_Byte[10]")]
		public byte Panose_0;
		public byte Panose_1;
		public byte Panose_2;
		public byte Panose_3;
		public byte Panose_4;
		public byte Panose_5;
		public byte Panose_6;
		public byte Panose_7;
		public byte Panose_8;
		public byte Panose_9;
		/// <summary>
		/// Bits 0-31   <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ulUnicodeRange1")]
		[NativeName(NativeNameType.Type, "FT_ULong")]
		public uint UlUnicodeRange1;

		/// <summary>
		/// Bits 32-63  <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ulUnicodeRange2")]
		[NativeName(NativeNameType.Type, "FT_ULong")]
		public uint UlUnicodeRange2;

		/// <summary>
		/// Bits 64-95  <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ulUnicodeRange3")]
		[NativeName(NativeNameType.Type, "FT_ULong")]
		public uint UlUnicodeRange3;

		/// <summary>
		/// Bits 96-127 <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ulUnicodeRange4")]
		[NativeName(NativeNameType.Type, "FT_ULong")]
		public uint UlUnicodeRange4;

		[NativeName(NativeNameType.Field, "achVendID")]
		[NativeName(NativeNameType.Type, "FT_Char[4]")]
		public byte AchVendID_0;
		public byte AchVendID_1;
		public byte AchVendID_2;
		public byte AchVendID_3;
		[NativeName(NativeNameType.Field, "fsSelection")]
		[NativeName(NativeNameType.Type, "FT_UShort")]
		public ushort FsSelection;
		[NativeName(NativeNameType.Field, "usFirstCharIndex")]
		[NativeName(NativeNameType.Type, "FT_UShort")]
		public ushort UsFirstCharIndex;
		[NativeName(NativeNameType.Field, "usLastCharIndex")]
		[NativeName(NativeNameType.Type, "FT_UShort")]
		public ushort UsLastCharIndex;
		[NativeName(NativeNameType.Field, "sTypoAscender")]
		[NativeName(NativeNameType.Type, "FT_Short")]
		public short STypoAscender;
		[NativeName(NativeNameType.Field, "sTypoDescender")]
		[NativeName(NativeNameType.Type, "FT_Short")]
		public short STypoDescender;
		[NativeName(NativeNameType.Field, "sTypoLineGap")]
		[NativeName(NativeNameType.Type, "FT_Short")]
		public short STypoLineGap;
		[NativeName(NativeNameType.Field, "usWinAscent")]
		[NativeName(NativeNameType.Type, "FT_UShort")]
		public ushort UsWinAscent;
		[NativeName(NativeNameType.Field, "usWinDescent")]
		[NativeName(NativeNameType.Type, "FT_UShort")]
		public ushort UsWinDescent;
		/// <summary>
		/// Bits 0-31   <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ulCodePageRange1")]
		[NativeName(NativeNameType.Type, "FT_ULong")]
		public uint UlCodePageRange1;

		/// <summary>
		/// Bits 32-63  <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ulCodePageRange2")]
		[NativeName(NativeNameType.Type, "FT_ULong")]
		public uint UlCodePageRange2;

		/// <summary>
		/// only version 2 and higher: <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "sxHeight")]
		[NativeName(NativeNameType.Type, "FT_Short")]
		public short SxHeight;

		[NativeName(NativeNameType.Field, "sCapHeight")]
		[NativeName(NativeNameType.Type, "FT_Short")]
		public short SCapHeight;
		[NativeName(NativeNameType.Field, "usDefaultChar")]
		[NativeName(NativeNameType.Type, "FT_UShort")]
		public ushort UsDefaultChar;
		[NativeName(NativeNameType.Field, "usBreakChar")]
		[NativeName(NativeNameType.Type, "FT_UShort")]
		public ushort UsBreakChar;
		[NativeName(NativeNameType.Field, "usMaxContext")]
		[NativeName(NativeNameType.Type, "FT_UShort")]
		public ushort UsMaxContext;
		/// <summary>
		/// in twips (1/20 points) <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "usLowerOpticalPointSize")]
		[NativeName(NativeNameType.Type, "FT_UShort")]
		public ushort UsLowerOpticalPointSize;

		/// <summary>
		/// in twips (1/20 points) <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "usUpperOpticalPointSize")]
		[NativeName(NativeNameType.Type, "FT_UShort")]
		public ushort UsUpperOpticalPointSize;


		public unsafe TtOs2(ushort version = default, short xAvgCharWidth = default, ushort usWeightClass = default, ushort usWidthClass = default, ushort fsType = default, short ySubscriptXSize = default, short ySubscriptYSize = default, short ySubscriptXOffset = default, short ySubscriptYOffset = default, short ySuperscriptXSize = default, short ySuperscriptYSize = default, short ySuperscriptXOffset = default, short ySuperscriptYOffset = default, short yStrikeoutSize = default, short yStrikeoutPosition = default, short sFamilyClass = default, byte* panose = default, uint ulUnicodeRange1 = default, uint ulUnicodeRange2 = default, uint ulUnicodeRange3 = default, uint ulUnicodeRange4 = default, byte* achVendID = default, ushort fsSelection = default, ushort usFirstCharIndex = default, ushort usLastCharIndex = default, short sTypoAscender = default, short sTypoDescender = default, short sTypoLineGap = default, ushort usWinAscent = default, ushort usWinDescent = default, uint ulCodePageRange1 = default, uint ulCodePageRange2 = default, short sxHeight = default, short sCapHeight = default, ushort usDefaultChar = default, ushort usBreakChar = default, ushort usMaxContext = default, ushort usLowerOpticalPointSize = default, ushort usUpperOpticalPointSize = default)
		{
			Version = version;
			XAvgCharWidth = xAvgCharWidth;
			UsWeightClass = usWeightClass;
			UsWidthClass = usWidthClass;
			FsType = fsType;
			YSubscriptXSize = ySubscriptXSize;
			YSubscriptYSize = ySubscriptYSize;
			YSubscriptXOffset = ySubscriptXOffset;
			YSubscriptYOffset = ySubscriptYOffset;
			YSuperscriptXSize = ySuperscriptXSize;
			YSuperscriptYSize = ySuperscriptYSize;
			YSuperscriptXOffset = ySuperscriptXOffset;
			YSuperscriptYOffset = ySuperscriptYOffset;
			YStrikeoutSize = yStrikeoutSize;
			YStrikeoutPosition = yStrikeoutPosition;
			SFamilyClass = sFamilyClass;
			if (panose != default(byte*))
			{
				Panose_0 = panose[0];
				Panose_1 = panose[1];
				Panose_2 = panose[2];
				Panose_3 = panose[3];
				Panose_4 = panose[4];
				Panose_5 = panose[5];
				Panose_6 = panose[6];
				Panose_7 = panose[7];
				Panose_8 = panose[8];
				Panose_9 = panose[9];
			}
			UlUnicodeRange1 = ulUnicodeRange1;
			UlUnicodeRange2 = ulUnicodeRange2;
			UlUnicodeRange3 = ulUnicodeRange3;
			UlUnicodeRange4 = ulUnicodeRange4;
			if (achVendID != default(byte*))
			{
				AchVendID_0 = achVendID[0];
				AchVendID_1 = achVendID[1];
				AchVendID_2 = achVendID[2];
				AchVendID_3 = achVendID[3];
			}
			FsSelection = fsSelection;
			UsFirstCharIndex = usFirstCharIndex;
			UsLastCharIndex = usLastCharIndex;
			STypoAscender = sTypoAscender;
			STypoDescender = sTypoDescender;
			STypoLineGap = sTypoLineGap;
			UsWinAscent = usWinAscent;
			UsWinDescent = usWinDescent;
			UlCodePageRange1 = ulCodePageRange1;
			UlCodePageRange2 = ulCodePageRange2;
			SxHeight = sxHeight;
			SCapHeight = sCapHeight;
			UsDefaultChar = usDefaultChar;
			UsBreakChar = usBreakChar;
			UsMaxContext = usMaxContext;
			UsLowerOpticalPointSize = usLowerOpticalPointSize;
			UsUpperOpticalPointSize = usUpperOpticalPointSize;
		}

		public unsafe TtOs2(ushort version = default, short xAvgCharWidth = default, ushort usWeightClass = default, ushort usWidthClass = default, ushort fsType = default, short ySubscriptXSize = default, short ySubscriptYSize = default, short ySubscriptXOffset = default, short ySubscriptYOffset = default, short ySuperscriptXSize = default, short ySuperscriptYSize = default, short ySuperscriptXOffset = default, short ySuperscriptYOffset = default, short yStrikeoutSize = default, short yStrikeoutPosition = default, short sFamilyClass = default, Span<byte> panose = default, uint ulUnicodeRange1 = default, uint ulUnicodeRange2 = default, uint ulUnicodeRange3 = default, uint ulUnicodeRange4 = default, Span<byte> achVendID = default, ushort fsSelection = default, ushort usFirstCharIndex = default, ushort usLastCharIndex = default, short sTypoAscender = default, short sTypoDescender = default, short sTypoLineGap = default, ushort usWinAscent = default, ushort usWinDescent = default, uint ulCodePageRange1 = default, uint ulCodePageRange2 = default, short sxHeight = default, short sCapHeight = default, ushort usDefaultChar = default, ushort usBreakChar = default, ushort usMaxContext = default, ushort usLowerOpticalPointSize = default, ushort usUpperOpticalPointSize = default)
		{
			Version = version;
			XAvgCharWidth = xAvgCharWidth;
			UsWeightClass = usWeightClass;
			UsWidthClass = usWidthClass;
			FsType = fsType;
			YSubscriptXSize = ySubscriptXSize;
			YSubscriptYSize = ySubscriptYSize;
			YSubscriptXOffset = ySubscriptXOffset;
			YSubscriptYOffset = ySubscriptYOffset;
			YSuperscriptXSize = ySuperscriptXSize;
			YSuperscriptYSize = ySuperscriptYSize;
			YSuperscriptXOffset = ySuperscriptXOffset;
			YSuperscriptYOffset = ySuperscriptYOffset;
			YStrikeoutSize = yStrikeoutSize;
			YStrikeoutPosition = yStrikeoutPosition;
			SFamilyClass = sFamilyClass;
			if (panose != default(Span<byte>))
			{
				Panose_0 = panose[0];
				Panose_1 = panose[1];
				Panose_2 = panose[2];
				Panose_3 = panose[3];
				Panose_4 = panose[4];
				Panose_5 = panose[5];
				Panose_6 = panose[6];
				Panose_7 = panose[7];
				Panose_8 = panose[8];
				Panose_9 = panose[9];
			}
			UlUnicodeRange1 = ulUnicodeRange1;
			UlUnicodeRange2 = ulUnicodeRange2;
			UlUnicodeRange3 = ulUnicodeRange3;
			UlUnicodeRange4 = ulUnicodeRange4;
			if (achVendID != default(Span<byte>))
			{
				AchVendID_0 = achVendID[0];
				AchVendID_1 = achVendID[1];
				AchVendID_2 = achVendID[2];
				AchVendID_3 = achVendID[3];
			}
			FsSelection = fsSelection;
			UsFirstCharIndex = usFirstCharIndex;
			UsLastCharIndex = usLastCharIndex;
			STypoAscender = sTypoAscender;
			STypoDescender = sTypoDescender;
			STypoLineGap = sTypoLineGap;
			UsWinAscent = usWinAscent;
			UsWinDescent = usWinDescent;
			UlCodePageRange1 = ulCodePageRange1;
			UlCodePageRange2 = ulCodePageRange2;
			SxHeight = sxHeight;
			SCapHeight = sCapHeight;
			UsDefaultChar = usDefaultChar;
			UsBreakChar = usBreakChar;
			UsMaxContext = usMaxContext;
			UsLowerOpticalPointSize = usLowerOpticalPointSize;
			UsUpperOpticalPointSize = usUpperOpticalPointSize;
		}


	}

}
